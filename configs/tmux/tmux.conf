# remap prefix from 'C-b' to 'C-Space'
unbind `
set-option -g prefix `
bind-key ` send-prefix

###### OPTIONS #######
set -g mouse on # mouse, use 'SHIFT' to temporarily disable mouse mode
set -s escape-time 0 # faster key repetition
set -g history-limit 20000 # history
set-option -g focus-events on # vim autoread
set -g history-limit 20000
set -g buffer-limit 20
set -sg escape-time 0
set -g display-time 1500
set -g remain-on-exit off
set -g repeat-time 300
setw -g aggressive-resize on
set-option -g renumber-windows on # renumber when windows are closed
set -g base-index 1 # start window numbering from one
setw -g pane-base-index 1
######################

##### VIM COLORS #####
# [!] Do not touch. Order is important
set-option -sa terminal-overrides ",xterm*:Tc"
# <--- uncomment these if vim colors are broken
set -ga terminal-overrides ',xterm*:Tc'
set -g default-terminal "tmux-256color" # `$TERM` for tmux
set -as terminal-overrides ',xterm*:sitm=\E[3m'
# ----> macos backspace produces space fix
# https://stackoverflow.com/questions/51488920/backspace-not-working-in-tmux-command-prompt
#set -g default-terminal "xterm-256color"
######################


##### Dracula ########
# set -g @dracula-time-colors "dark_purple white"
# set -g @dracula-day-month true
# set -g @dracula-military-time true # not AM/PM
# set -g @dracula-show-powerline true
# set -g @dracula-show-flags true
# set -g @dracula-show-fahrenheit false
# set -g @dracula-show-timezone false
# set -g @dracula-cpu-usage-label "CPU"
# set -g @dracula-cpu-display-load true
# set -g @dracula-plugins "time"
# set -g @dracula-border-contrast true
# set -g @dracula-show-left-icon session
########################
# set -g @monokai-day-month true
# #set -g @monokai-time-colors "dark_purple white"
# set -g @monokai-military-time true # not AM/PM
# #$set -g @monokai-show-powerline true
# set -g @monokai-show-flags true
# #set -g @monokai-show-fahrenheit false
# #set -g @monokai-show-timezone false
# set -g @monokai-cpu-usage-label "CPU"
# set -g @monokai-cpu-display-load true
# #set -g @monokai-plugins "time"
# set -g @monokai-border-contrast true
#set -g @monokai-show-left-icon session

# use <prefix> s for horizontal split
# use <prefix> v for vertical split
bind s split-window -v
bind v split-window -h


# Prompt to rename window right after it's created
set-hook -g after-new-window 'command-prompt -I "#{window_name}" "rename-window '%%'"'

# Kill pane/window/session shortcuts
bind q kill-pane
bind Q kill-window

# resize panes more easily
bind < resize-pane -L 10
bind > resize-pane -R 10
bind - resize-pane -D 10
bind + resize-pane -U 10

# vim like binding
unbind C-w

bind-key    -T prefix       S                    switch-client -l

bind-key r source-file ~/.config/tmux/tmux.conf

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
| grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1   ]' \
"bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'
'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1   ]' \
"bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'
'select-pane -l'"
#################################################################

bind-key         y copy-mode
setw -g mode-keys vi
# trigger copy mode by
bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l
set-window-option -g mode-keys vi
bind-key -T copy-mode-vi 'v' send-keys -X begin-selection
bind-key -T copy-mode-vi 'y' send-keys -X copy-selection-and-cancel
bind-key p paste-buffer

# tmux plugins manager
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
# set -g @plugin 'dracula/tmux'
set -g @plugin 'maxpetretta/tmux-monokai-pro'
set -g @plugin 'tmux-plugins/tmux-sessionist'
set -g @plugin 'tmux-plugins/tmux-open'             # Open links from tmux - Select path and press o

###
bind-key p paste-buffer
set -g pane-border-style 'fg=colour19 bg=colour0'
set -g pane-active-border-style 'bg=colour0 fg=colour5'

set -g @plugin 'tmux-plugins/tmux-continuum' # Must be last
set -g @continuum-boot 'off'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
set-environment -g TMUX_PLUGIN_MANAGER_PATH '~/.local/share/tmux/plugins'
run '$XDG_DATA_HOME/tmux/tpm/tpm'
